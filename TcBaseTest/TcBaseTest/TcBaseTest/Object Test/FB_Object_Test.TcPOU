<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_Object_Test" Id="{1e5f65c4-3faf-4e9f-84e8-1c5dcecc63ef}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'reflection'}
FUNCTION_BLOCK FB_Object_Test EXTENDS TcUnit.FB_TestSuite
VAR
    fbPathTester: FB_TestObject;
    _sTestPath: STRING(MAX_STRING_LENGTH) := CONCAT(_sPath, '.fbPathTester');

    {attribute 'instance-path'}
    {attribute 'noinit'}
    _sPath: STRING(MAX_STRING_LENGTH);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[TestCompareObjectToSelfExpectTrue();
TestCompareTwoDifferentObjectsExpectFalse();
TestIdentityCorrectness();
TestPathCorrectness();
]]></ST>
    </Implementation>
    <Method Name="TestCompareObjectToSelfExpectTrue" Id="{bf7a373e-c74d-4871-a3f7-83380aaaf298}">
      <Declaration><![CDATA[METHOD PRIVATE TestCompareObjectToSelfExpectTrue
VAR_INST
    fbObject1:      FB_TestObject;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TcUnit.TEST('TestCompareObjectToSelfExpectTrue');

THIS^.AssertTrue(Condition := fbObject1.Equals(fbObject1),
                 Message := 'Failed when comparing two equal objects');

TcUnit.TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="TestCompareTwoDifferentObjectsExpectFalse" Id="{cd62e66a-50ad-4b67-bb2c-82c2df381daf}">
      <Declaration><![CDATA[METHOD PRIVATE TestCompareTwoDifferentObjectsExpectFalse
VAR_INST
    fbObject1:      FB_TestObject;
    fbObject2:      FB_TestObject;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TcUnit.TEST('TestCompareTwoDifferentObjectsExpectFalse');

THIS^.AssertFalse(Condition := fbObject1.Equals(fbObject2),
                  Message := 'Failed when comparing two equal objects');

TcUnit.TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="TestIdentityCorrectness" Id="{4215f9ad-ac91-4d26-bcb1-9dfb92d52f34}">
      <Declaration><![CDATA[METHOD PRIVATE TestIdentityCorrectness
VAR_INST
    fbObject: FB_TestObject;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[TcUnit.TEST('TestIdentityCorrectness');

THIS^.AssertEquals_ULINT(Expected := ADR(fbObject),
                         Actual := fbObject.nIdentity,
                         Message := 'Object indentity is not true');

TcUnit.TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
    <Method Name="TestPathCorrectness" Id="{b2ea58c0-94bb-404e-86f5-944cddb334ee}">
      <Declaration><![CDATA[METHOD PRIVATE TestPathCorrectness
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TcUnit.TEST('TestPathCorrectness');

THIS^.AssertEquals_STRING(Expected := THIS^._sTestPath,
                          Actual := THIS^.fbPathTester.sPath,
                          Message := 'Object path is not true');

TcUnit.TEST_FINISHED();
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>